# Generated by Django 4.1.7 on 2023-03-22 17:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import roommate.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=10)),
                ('price', models.DecimalField(decimal_places=0, max_digits=8)),
                ('bedrooms', models.CharField(choices=[('Private', 'Private'), ('Shared', 'Shared')], default='Private', max_length=7)),
                ('bathrooms', models.CharField(choices=[('Private', 'Private'), ('Shared', 'Shared')], default='Private', max_length=7)),
                ('move_in_date', models.DateField(default=django.utils.timezone.now)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('is_furnished', models.BooleanField(default=False)),
                ('has_parking', models.BooleanField(default=False)),
                ('has_balcony', models.BooleanField(default=False)),
                ('has_pool', models.BooleanField(default=False)),
                ('has_gym', models.BooleanField(default=False)),
                ('has_washing_machine', models.BooleanField(default=False)),
                ('has_dryer', models.BooleanField(default=False)),
                ('has_dishwasher', models.BooleanField(default=False)),
                ('has_air_conditioning', models.BooleanField(default=False)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_bbq_facilities', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('available_from', models.DateField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('provider', 'Roommate Provider'), ('seeker', 'Roommate Seeker')], max_length=10, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=roommate.models.get_upload_path)),
                ('bio', models.CharField(blank=True, max_length=500)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('social_facebook', models.URLField(blank=True)),
                ('social_twitter', models.URLField(blank=True)),
                ('social_instagram', models.URLField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('any', 'Any')], default='any', max_length=10)),
                ('preferred_age_min', models.PositiveIntegerField(default=18)),
                ('preferred_age_max', models.PositiveIntegerField(default=100)),
                ('smoking_preference', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('indifferent', 'Indifferent')], default='indifferent', max_length=12)),
                ('pets_preference', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('indifferent', 'Indifferent')], default='indifferent', max_length=12)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preference', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_by', to=settings.AUTH_USER_MODEL)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lifestyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_schedule', models.CharField(choices=[('morning', 'Morning'), ('afternoon', 'Afternoon'), ('evening', 'Evening'), ('night', 'Night'), ('flexible', 'Flexible')], default='flexible', max_length=10)),
                ('cleanliness', models.CharField(choices=[('very_clean', 'Very Clean'), ('clean', 'Clean'), ('moderate', 'Moderate'), ('messy', 'Messy')], default='moderate', max_length=10)),
                ('social', models.CharField(choices=[('very_social', 'Very Social'), ('social', 'Social'), ('moderate', 'Moderate'), ('not_social', 'Not Social')], default='moderate', max_length=11)),
                ('interests', models.TextField(blank=True)),
                ('hobbies', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lifestyle', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=roommate.models.get_upload_path)),
                ('apartment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='roommate.apartment')),
            ],
        ),
        migrations.AddField(
            model_name='apartment',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='apartments', to='roommate.apartmentimage'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roommate.apartment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'apartment')},
            },
        ),
    ]
